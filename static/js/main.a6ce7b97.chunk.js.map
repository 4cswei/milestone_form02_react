{"version":3,"sources":["components/InputRequired/InputRequired.jsx","components/Input/Input.jsx","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputRequired","props","className","htmlFor","id","title","type","value","onChange","required","error","class","Input","Button","onClick","name","App","useState","username","setUsername","email","setEmail","password","setPassword","setPasswordError","rePassword","setRePassword","firstName","setFirstName","lastName","setLastName","dob","setDoB","phone","setPhone","address01","setAddress01","address02","setAddress02","city","setCity","postcode","setPostcode","console","log","onSubmit","e","preventDefault","alert","target","newPassword","length","test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ce7b97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction InputRequired(props) {\r\n  return (\r\n    <div className=\"input-field\">\r\n      <label htmlFor={props.id}>{props.title}</label>\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        required=\"required\"\r\n      />\r\n      {props.error && <p class=\"input-error\">{props.error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputRequired;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nfunction Input(props) {\r\n  return (\r\n    <div className=\"input-field\">\r\n      <label htmlFor={props.id}>{props.title}</label>\r\n      <input\r\n        type={props.type}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      {/* {props.error && <p class=\"input-error\">{props.error}</p>} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      type={props.type || \"button\"}\r\n      className=\"button\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport InputRequired from \"./components/InputRequired/InputRequired\";\nimport Input from \"./components/Input/Input\";\nimport Button from \"./components/Button/Button\";\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [dob, setDoB] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address01, setAddress01] = useState(\"\");\n  const [address02, setAddress02] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n\n  // function handleChange(e) {\n  //   console.log(e.target.id, e.target.value);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (password !== rePassword) {\n      alert(\"Password not match\");\n    } else {\n      alert(`You are registered successfully as ${username}.`);\n    }\n  }\n\n  function handlePasswordChange(e) {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    if (newPassword.length < 8) {\n      setPasswordError(\n        \"Please provide a password of a minimum of 8 characters.\"\n      );\n    } else if (!/\\d/.test(newPassword)) {\n      setPasswordError(\"Please provide a password with a number\");\n    } else {\n      setPasswordError(\"\");\n    }\n  }\n\n  console.log(\"Username\", username);\n  console.log(\"Email\", email);\n  console.log(\"Password\", password);\n  console.log(\"Retype password\", rePassword);\n  console.log(\"FirstName\", firstName);\n  console.log(\"LastName\", lastName);\n  console.log(\"DoB\", dob);\n  console.log(\"Phone\", phone);\n  console.log(\"Address01\", address01);\n  console.log(\"Address02\", address02);\n  console.log(\"City\", city);\n  console.log(\"Postcode\", postcode);\n\n  return (\n    <div className=\"App\">\n      <h1>Membership Registration Form2</h1>\n      <form onSubmit={handleSubmit}>\n        <InputRequired\n          type=\"text\"\n          id=\"username\"\n          title=\"Username: \"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <InputRequired\n          type=\"email\"\n          id=\"email\"\n          title=\"Email: \"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <InputRequired\n          type=\"password\"\n          id=\"password\"\n          title=\"Password: \"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          error={handlePasswordChange}\n        />\n        <InputRequired\n          type=\"password\"\n          id=\"rePassword\"\n          title=\"Retype Password: \"\n          value={rePassword}\n          onChange={(e) => setRePassword(e.target.value)}\n        />\n        <InputRequired\n          type=\"text\"\n          id=\"firstName\"\n          title=\"First Name: \"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n        <InputRequired\n          type=\"text\"\n          id=\"lastName\"\n          title=\"Last Name: \"\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n        />\n        <InputRequired\n          type=\"date\"\n          id=\"dob\"\n          title=\"Birthday: \"\n          value={dob}\n          onChange={(e) => setDoB(e.target.value)}\n        />\n        <InputRequired\n          type=\"tel\"\n          id=\"phone\"\n          title=\"Phone Number: \"\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n        />\n        <InputRequired\n          type=\"text\"\n          id=\"address01\"\n          title=\"Address First Line: \"\n          value={address01}\n          onChange={(e) => setAddress01(e.target.value)}\n        />\n        <Input\n          type=\"text\"\n          id=\"address02\"\n          title=\"Address Second Line: \"\n          value={address02}\n          onChange={(e) => setAddress02(e.target.value)}\n        />\n        <InputRequired\n          type=\"text\"\n          id=\"city\"\n          title=\"City/Town: \"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        <InputRequired\n          type=\"text\"\n          id=\"postcode\"\n          title=\"Postcode: \"\n          value={postcode}\n          onChange={(e) => setPostcode(e.target.value)}\n        />\n        <Button type=\"submit\" name=\"Register\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}